<?php

namespace Drupal\oem_symbol_field\Plugin\Field\FieldWidget;

use Drupal\image\Plugin\Field\FieldWidget\ImageWidget;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Field\FieldItemListInterface;

/**
 * Provides the field widget for Symbol field.
 *
 * @FieldWidget(
 *   id = "symbol_widget",
 *   label = @Translation("Symbol"),
 *   description = @Translation("An Image field with a text field for a description"),
 *   field_types = {
 *     "symbolfield"
 *   }
 * )
 */
class SymbolWidget extends ImageWidget {

    /**
     * {@inheritdoc}
     */
    public function formElement(FieldItemListInterface $items, $delta, array $element, array &$form, FormStateInterface $form_state) {
    // The formElement method returns the form for a single field widget (Used to render the form in the Admin Interface of Drupal)
    // We need to add our new field to this
        
        // Get the parents form elements
        $element = parent::formElement($items, $delta, $element, $form, $form_state);

        // Build the render array for our new field
        $element['description'] = array(
            '#title' => $this->t('Description'),
            '#type' => 'textfield',
            '#default_value' => isset($items[$delta]) ? $items[$delta]->description : '',
            '#description' => $this->t('A description of the image that has been added.'),
            '#maxlength' => '512',
            '#weight' => '-10',
        );

        // Return the updated widget
        return $element;

    }
    
}
